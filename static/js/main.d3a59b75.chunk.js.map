{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","placeholder","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d3a59b75.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/About\">{props.aboutText}</a>\r\n        </li> */}\r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      \r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-3`}>\r\n  <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    )\r\n}\r\n\r\n\r\nNavbar.propTypes={title: PropTypes.string.isRequired,\r\n                  aboutText : PropTypes.string.isRequired}\r\nNavbar.defaultProps={\r\n    title: \"Set title here\",\r\n    aboutText: \"About\"\r\n}                  ","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick=()=>{\r\n    // console.log(\"Uppercase was clicked\"+ text);\r\n    let newText=text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to UpperCase\",\"success\")\r\n  }\r\n  const handleLowClick=()=>{\r\n    // console.log(\"Lowercase was clicked\"+ text);\r\n    let newText=text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to LowerCase\",\"success\")\r\n  }\r\n  const handleCopyClick=()=>{\r\n    let text=document.getElementById(\"myBox\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text copied to clipboard\",\"success\")\r\n\r\n  }\r\n  const handleClearClick=()=>{\r\n    let newText= document.getElementById(\"myBox\").value = \"\";\r\n    setText(newText);\r\n    props.showAlert(\"Text cleared\",\"success\")\r\n\r\n  }\r\n  const handleOnChange=(event)=>{\r\n    // console.log(\"On change\");\r\n    setText(event.target.value)\r\n  }\r\n  const [text,setText]=useState('');\r\n  // setText(\"new text\");\r\n    return (\r\n      <>\r\n        <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h1 >{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'grey':'white',color:props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\" placeholder=\"Enter the text here\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary\" onClick={handleUpClick} >Convert to Upper Case</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleLowClick} >Convert to Lower Case</button>\r\n<button className=\"btn btn-primary mx-1\" onClick={handleClearClick} >Clear Text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleCopyClick} >Copy Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n          <h1>Your Text summary</h1>\r\n          <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n          <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n          <h2>Preview</h2>\r\n          <p>{text.length>0?text:\"Enter something to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n   const capitalize=(word)=>{\r\n       const lower=word.toLowerCase();\r\n       return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n   }\r\n\r\n    return (\r\n        \r\n          props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n</div>\r\n        \r\n    )\r\n}\r\n","// import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n// import Practice from './components/Practice';\n\nfunction App() {\n\n   const [mode, setMode] = useState('light')\n   const toggleMode = () =>{\n     if(mode==='light'){\n       setMode('dark');\n       document.body.style.backgroundColor='rgb(34 42 65)';\n       showAlert(\"Dark Mode has been enabled\",\"success\");\n       document.title=\"TextUtils - Dark Mode\";\n       \n      }\n      else{\n        setMode('light');\n        document.body.style.backgroundColor='white';\n        showAlert(\"Light Mode has been enabled\",\"success\");\n        document.title=\"TextUtils - Light Mode\";\n      }\n    }\n    \n    const [alert, setAlert] = useState(null);\n    \n   const showAlert = (message,type)=>{\n     setAlert({\n       msg: message,\n       type: type\n     })\n     setTimeout(() => {\n       setAlert(null)\n     }, 1500);\n   }\n\n  return (\n    <>\n  {/* <Router> */}\n<Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\" >\n{/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          {<TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/> }\n          {/* </Route> */}\n        {/* </Switch> */}\n</div>\n        {/* </Router> */}\n{/* <Practice/> */}\n    </>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}